{
  "filename": "deploy-by-docker-compose.md",
  "__html": "<h1>使用 docker-compose 部署 Seata Server</h1>\n<h2>注意事项</h2>\n<ul>\n<li>避免直接拉取latest版本镜像，latest版本并不一定是released版本，为避免不必要的问题，请到<a href=\"https://hub.docker.com/r/seataio/seata-server/tags\">docker镜像仓库</a>确定要拉取的镜像版本。</li>\n</ul>\n<h2>快速开始</h2>\n<ul>\n<li><a href=\"#file-file\">无注册中心，file存储</a></li>\n<li><a href=\"#file-db\">无注册中心，db存储</a></li>\n<li><a href=\"#nacos-db\">nacos注册中心，db存储</a></li>\n<li><a href=\"#ha-nacos-db\">高可用部署</a></li>\n</ul>\n<h3><a id=\"file-file\">无注册中心，file存储</a></h3>\n<p>该模式下，不需要注册中心，也不需要任何第三方存储中心。</p>\n<p>docker-compose.yaml</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">\"3.1\"</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">seata-server:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">seataio/seata-server:${latest-release-version}</span>\n    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">seata-server</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"8091:8091\"</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_PORT=8091</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">STORE_MODE=file</span>\n</code></pre>\n<h3><a id=\"file-db\">无注册中心，DB存储</a></h3>\n<blockquote>\n<p>db模式需要在数据库创建对应的表结构，<a href=\"https://github.com/seata/seata/tree/develop/script/server/db\">[建表脚本]</a>。</p>\n</blockquote>\n<p><strong>（1）准备file.conf配置文件</strong></p>\n<p>更多存储模式支持可参考<a href=\"https://github.com/seata/seata/blob/develop/script/config-center/config.txt\">更多存储模式</a></p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\"># 存储模式</span>\n<span class=\"hljs-meta\">store.mode</span>=<span class=\"hljs-string\">db</span>\n\n<span class=\"hljs-meta\">store.db.datasource</span>=<span class=\"hljs-string\">druid</span>\n<span class=\"hljs-meta\">store.db.dbType</span>=<span class=\"hljs-string\">mysql</span>\n<span class=\"hljs-comment\"># 需要根据mysql的版本调整driverClassName</span>\n<span class=\"hljs-comment\"># mysql8及以上版本对应的driver：com.mysql.cj.jdbc.Driver</span>\n<span class=\"hljs-comment\"># mysql8以下版本的driver：com.mysql.jdbc.Driver</span>\n<span class=\"hljs-meta\">store.db.driverClassName</span>=<span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span>\n<span class=\"hljs-comment\"># 注意根据生产实际情况调整参数host和port</span>\n<span class=\"hljs-meta\">store.db.url</span>=<span class=\"hljs-string\">jdbc:mysql://127.0.0.1:3306/seata-server?useUnicode=true&amp;characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false</span>\n<span class=\"hljs-comment\"># 数据库用户名</span>\n<span class=\"hljs-meta\">store.db.user</span>=<span class=\"hljs-string\"></span>\n<span class=\"hljs-comment\"># 用户名密码</span>\n<span class=\"hljs-meta\">store.db.password</span>=<span class=\"hljs-string\"></span>\n</code></pre>\n<p><strong>（2）准备registry.conf文件</strong></p>\n<p>更多注册中心支持可参考<a href=\"https://seata.io/zh-cn/docs/user/registry/index.html\">注册中心</a></p>\n<p>更多配置中心支持可参考<a href=\"https://seata.io/zh-cn/docs/user/configuration/index.html\">配置中心</a></p>\n<p>直连模式（无注册中心）</p>\n<pre><code>registry {\n  type = &quot;file&quot;\n}\n\nconfig {\n  type = &quot;file&quot;\n  \n  file {\n    name=&quot;file:/root/seata-config/file.conf&quot;\n  }\n}\n</code></pre>\n<p><strong>（3）准备docker-compose.yaml文件</strong></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">\"3.1\"</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">seata-server:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">seataio/seata-server:${latest-release-version}</span>\n    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">seata-server</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"8091:8091\"</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_PORT=8091</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_CONFIG_NAME=file:/root/seata-config/registry</span>\n    <span class=\"hljs-attr\">volumes:</span>\n    <span class=\"hljs-comment\"># 需要把file.conf和registry.conf都放到./seata-server/config文件夹中</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"./seata-server/config:/root/seata-config\"</span>\n</code></pre>\n<h3><a id=\"nacos-db\">nacos注册中心，db存储</a></h3>\n<blockquote>\n<p>db模式需要在数据库创建对应的表结构，<a href=\"https://github.com/seata/seata/tree/develop/script/server/db\">[建表脚本]</a>。</p>\n</blockquote>\n<p><strong>（1）准备registry.conf文件</strong></p>\n<p>nacos注册中心。</p>\n<p>更多注册中心支持可参考<a href=\"https://seata.io/zh-cn/docs/user/registry/index.html\">注册中心</a></p>\n<p>更多配置中心支持可参考<a href=\"https://seata.io/zh-cn/docs/user/configuration/index.html\">配置中心</a></p>\n<pre><code>registry {\n  type = &quot;nacos&quot;\n  \n  nacos {\n  # seata服务注册在nacos上的别名，客户端通过该别名调用服务\n    application = &quot;seata-server&quot;\n  # 请根据实际生产环境配置nacos服务的ip和端口\n    serverAddr = &quot;127.0.0.1:8848&quot;\n  # nacos上指定的namespace\n    namespace = &quot;&quot;\n    cluster = &quot;default&quot;\n    username = &quot;nacos&quot;\n    password = &quot;nacos&quot;\n  }\n}\n\nconfig {\n  type = &quot;nacos&quot;\n  \n  nacos {\n    # 请根据实际生产环境配置nacos服务的ip和端口\n    serverAddr = &quot;127.0.0.1:8848&quot;\n    # nacos上指定的namespace\n    namespace = &quot;&quot;\n    group = &quot;SEATA_GROUP&quot;\n    username = &quot;nacos&quot;\n    password = &quot;nacos&quot;\n  # 从v1.4.2版本开始，已支持从一个Nacos dataId中获取所有配置信息,你只需要额外添加一个dataId配置项\n    dataId: &quot;seataServer.properties&quot;\n  }\n}\n</code></pre>\n<p><strong>（2）准备nacos配置中心配置</strong></p>\n<p>更多存储模式支持可参考<a href=\"https://github.com/seata/seata/blob/develop/script/config-center/config.txt\">更多存储模式</a></p>\n<blockquote>\n<p>你需要在nacos新建配置，此处dataId为seataServer.properties</p>\n</blockquote>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\"># 存储模式</span>\n<span class=\"hljs-meta\">store.mode</span>=<span class=\"hljs-string\">db</span>\n\n<span class=\"hljs-meta\">store.db.datasource</span>=<span class=\"hljs-string\">druid</span>\n<span class=\"hljs-meta\">store.db.dbType</span>=<span class=\"hljs-string\">mysql</span>\n<span class=\"hljs-comment\"># 需要根据mysql的版本调整driverClassName</span>\n<span class=\"hljs-comment\"># mysql8及以上版本对应的driver：com.mysql.cj.jdbc.Driver</span>\n<span class=\"hljs-comment\"># mysql8以下版本的driver：com.mysql.jdbc.Driver</span>\n<span class=\"hljs-meta\">store.db.driverClassName</span>=<span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span>\n<span class=\"hljs-comment\"># 注意根据生产实际情况调整参数host和port</span>\n<span class=\"hljs-meta\">store.db.url</span>=<span class=\"hljs-string\">jdbc:mysql://127.0.0.1:3306/seata-server?useUnicode=true&amp;characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false</span>\n<span class=\"hljs-comment\"># 数据库用户名</span>\n<span class=\"hljs-meta\">store.db.user</span>=<span class=\"hljs-string\"></span>\n<span class=\"hljs-comment\"># 用户名密码</span>\n<span class=\"hljs-meta\">store.db.password</span>=<span class=\"hljs-string\"></span>\n</code></pre>\n<p><strong>（3）准备docker-compose.yaml文件</strong></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">\"3.1\"</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">seata-server:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">seataio/seata-server:${latest-release-version}</span>\n    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">seata-server</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"8091:8091\"</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-comment\"># 指定seata服务启动端口</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_PORT=8091</span>\n      <span class=\"hljs-comment\"># 注册到nacos上的ip。客户端将通过该ip访问seata服务。</span>\n      <span class=\"hljs-comment\"># 注意公网ip和内网ip的差异。</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_IP=127.0.0.1</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_CONFIG_NAME=file:/root/seata-config/registry</span>\n    <span class=\"hljs-attr\">volumes:</span>\n    <span class=\"hljs-comment\"># 因为registry.conf中是nacos配置中心，只需要把registry.conf放到./seata-server/config文件夹中</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"./seata-server/config:/root/seata-config\"</span>\n</code></pre>\n<h3><a id=\"ha-nacos-db\">高可用部署</a></h3>\n<blockquote>\n<p>seata高可用依赖于注册中心、数据库，可不依赖配置中心。</p>\n</blockquote>\n<blockquote>\n<p>db模式需要在数据库创建对应的表结构，<a href=\"https://github.com/seata/seata/tree/develop/script/server/db\">[建表脚本]</a>。</p>\n</blockquote>\n<p><strong>（1）准备file.conf配置文件</strong></p>\n<p>更多存储模式支持可参考<a href=\"https://github.com/seata/seata/blob/develop/script/config-center/config.txt\">更多存储模式</a></p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\"># 存储模式</span>\n<span class=\"hljs-meta\">store.mode</span>=<span class=\"hljs-string\">db</span>\n\n<span class=\"hljs-meta\">store.db.datasource</span>=<span class=\"hljs-string\">druid</span>\n<span class=\"hljs-meta\">store.db.dbType</span>=<span class=\"hljs-string\">mysql</span>\n<span class=\"hljs-comment\"># 需要根据mysql的版本调整driverClassName</span>\n<span class=\"hljs-comment\"># mysql8及以上版本对应的driver：com.mysql.cj.jdbc.Driver</span>\n<span class=\"hljs-comment\"># mysql8以下版本的driver：com.mysql.jdbc.Driver</span>\n<span class=\"hljs-meta\">store.db.driverClassName</span>=<span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span>\n<span class=\"hljs-comment\"># 注意根据生产实际情况调整参数host和port</span>\n<span class=\"hljs-meta\">store.db.url</span>=<span class=\"hljs-string\">jdbc:mysql://127.0.0.1:3306/seata-server?useUnicode=true&amp;characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false</span>\n<span class=\"hljs-comment\"># 数据库用户名</span>\n<span class=\"hljs-meta\">store.db.user</span>=<span class=\"hljs-string\"></span>\n<span class=\"hljs-comment\"># 用户名密码</span>\n<span class=\"hljs-meta\">store.db.password</span>=<span class=\"hljs-string\"></span>\n</code></pre>\n<p><strong>（2）准备registry.conf文件</strong></p>\n<p>nacos注册中心。</p>\n<p>更多注册中心支持可参考<a href=\"https://seata.io/zh-cn/docs/user/registry/index.html\">注册中心</a></p>\n<p>更多配置中心支持可参考<a href=\"https://seata.io/zh-cn/docs/user/configuration/index.html\">配置中心</a></p>\n<pre><code>registry {\n  type = &quot;nacos&quot;\n  \n  nacos {\n  # seata服务注册在nacos上的别名，客户端通过该别名调用服务\n    application = &quot;seata-server&quot;\n  # nacos服务的ip和端口\n    serverAddr = &quot;127.0.0.1:8848&quot;\n  # nacos上指定的namespace\n    namespace = &quot;&quot;\n    cluster = &quot;default&quot;\n    username = &quot;nacos&quot;\n    password = &quot;nacos&quot;\n  }\n}\n\nconfig {\n  type = &quot;file&quot;\n  \n  file {\n    name=&quot;file:/root/seata-config/file.conf&quot;\n  }\n}\n</code></pre>\n<p><strong>（3）准备docker-compose.yaml文件</strong></p>\n<blockquote>\n<p>只要保持配置一致，seata服务可在一台机器上部署多实例，也可同时部署在多台不同的主机下面实现服务高可用。\n<a href=\"https://seata.io/zh-cn/docs/ops/deploy-ha.html\">高可用部署</a></p>\n</blockquote>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">\"3.1\"</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-comment\"># seata服务1</span>\n  <span class=\"hljs-attr\">seata-server-1:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">seataio/seata-server:${latest-release-version}</span>\n    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">seata-server</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"8091:8091\"</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-comment\"># 指定seata服务启动端口</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_PORT=8091</span>\n      <span class=\"hljs-comment\"># 注册到nacos上的ip。客户端将通过该ip访问seata服务。</span>\n      <span class=\"hljs-comment\"># 注意公网ip和内网ip的差异。</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_IP=127.0.0.1</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_CONFIG_NAME=file:/root/seata-config/registry</span>\n    <span class=\"hljs-attr\">volumes:</span>\n    <span class=\"hljs-comment\"># 需要把file.conf和registry.conf都放到./seata-server/config文件夹中</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"./seata-server/config:/root/seata-config\"</span>\n  <span class=\"hljs-comment\"># seata服务2</span>\n  <span class=\"hljs-attr\">seata-server-2:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">seataio/seata-server:${latest-release-version}</span>\n    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">seata-server</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"8092:8092\"</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-comment\"># 指定seata服务启动端口</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_PORT=8092</span>\n      <span class=\"hljs-comment\"># 注册到nacos上的ip。客户端将通过该ip访问seata服务。</span>\n      <span class=\"hljs-comment\"># 注意公网ip和内网ip的差异。</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_IP=127.0.0.1</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SEATA_CONFIG_NAME=file:/root/seata-config/registry</span>\n    <span class=\"hljs-attr\">volumes:</span>\n    <span class=\"hljs-comment\"># 需要把file.conf和registry.conf都放到./seata-server/config文件夹中</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"./seata-server/config:/root/seata-config\"</span>\n  \n  <span class=\"hljs-comment\"># seata服务3......seata服务N</span>\n</code></pre>\n<h2>环境变量</h2>\n<p>seata-server 支持以下环境变量：</p>\n<ul>\n<li><strong>SEATA_IP</strong></li>\n</ul>\n<blockquote>\n<p>可选, 指定seata-server启动的IP, 该IP用于向注册中心注册时使用, 如eureka等</p>\n</blockquote>\n<ul>\n<li><strong>SEATA_PORT</strong></li>\n</ul>\n<blockquote>\n<p>可选, 指定seata-server启动的端口, 默认为 <code>8091</code></p>\n</blockquote>\n<ul>\n<li><strong>STORE_MODE</strong></li>\n</ul>\n<blockquote>\n<p>可选, 指定seata-server的事务日志存储方式, 支持<code>db</code>, <code>file</code>, <code>redis</code>(Seata-Server 1.3及以上版本支持), 默认是 <code>file</code></p>\n</blockquote>\n<ul>\n<li><strong>SERVER_NODE</strong></li>\n</ul>\n<blockquote>\n<p>可选, 用于指定seata-server节点ID, 如 <code>1</code>,<code>2</code>,<code>3</code>..., 默认为 <code>根据ip生成</code></p>\n</blockquote>\n<ul>\n<li><strong>SEATA_ENV</strong></li>\n</ul>\n<blockquote>\n<p>可选, 指定 seata-server 运行环境, 如 <code>dev</code>, <code>test</code> 等, 服务启动时会使用 <code>registry-dev.conf</code> 这样的配置</p>\n</blockquote>\n<ul>\n<li><strong>SEATA_CONFIG_NAME</strong></li>\n</ul>\n<blockquote>\n<p>可选, 指定配置文件位置, 如 <code>file:/root/registry</code>, 将会加载 <code>/root/registry.conf</code> 作为配置文件，如果需要同时指定 <code>file.conf</code>文件，需要将<code>registry.conf</code>的<code>config.file.name</code>的值改为类似<code>file:/root/file.conf</code>：</p>\n</blockquote>\n",
  "link": "/zh-cn/docs/ops/deploy-by-docker-compose.html",
  "meta": {
    "hidden": "true",
    "title": "使用 Docker compose 快速部署 Seata Server",
    "keywords": "docker-compose,ops",
    "description": "使用 Docker-compose 快速部署 Seata Server",
    "author": "zouwei",
    "date": "2021-12-05"
  }
}